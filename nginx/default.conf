server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index /views/home.html;

    # セキュリティ設定
    server_tokens off;

    # 静的ファイルのキャッシュ設定
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # 開発環境ではキャッシュを無効化
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }

    # HTMLファイルのキャッシュ設定
    location ~* \.html$ {
        # 開発環境ではキャッシュを無効化
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }

    # API エンドポイント
    location /api/ {
        
        proxy_pass http://app:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # タイムアウト設定
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # ヘルスチェック
    location /health {
        proxy_pass http://app:5000/health;
        access_log off;
    }

    # 成功ページのルーティング
    location = /success-checkout {
        try_files /views/success-checkout.html /views/home.html;
    }
    location = /success-subscription {
        try_files /views/success-subscription.html /views/home.html;
    }
    
    # キャンセルページのルーティング
    location = /cancel {
        try_files /views/cancel.html /views/home.html;
    }
    
    # HTMLファイルのルーティング
    location = /home.html {
        try_files /views/home.html /views/home.html;
    }
    
    location = /login.html {
        try_files /views/login.html /views/home.html;
    }
    
    location = /user-registration.html {
        try_files /views/user-registration.html /views/home.html;
    }
    
    location = /mypage.html {
        try_files /views/mypage.html /views/home.html;
    }
    
    location = /success-checkout.html {
        try_files /views/success-checkout.html /views/home.html;
    }
    
    location = /success-subscription.html {
        try_files /views/success-subscription.html /views/home.html;
    }
    
    location = /cancel.html {
        try_files /views/cancel.html /views/home.html;
    }
    
    # frontend/views/ パスの具体的なルーティング
    location = /frontend/views/mypage.html {
        try_files /views/mypage.html /views/home.html;
    }
    
    location = /frontend/views/home.html {
        try_files /views/home.html /views/home.html;
    }
    
    location = /frontend/views/login.html {
        try_files /views/login.html /views/home.html;
    }
    
    location = /frontend/views/user-registration.html {
        try_files /views/user-registration.html /views/home.html;
    }
    
    location = /frontend/views/success-checkout.html {
        try_files /views/success-checkout.html /views/home.html;
    }
    
    location = /frontend/views/success-subscription.html {
        try_files /views/success-subscription.html /views/home.html;
    }
    
    location = /frontend/views/cancel.html {
        try_files /views/cancel.html /views/home.html;
    }
    
    # フロントエンドのルーティング（SPA対応）
    location / {
        try_files $uri $uri/ /views/home.html;
        
        # セキュリティヘッダー
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # 隠しファイルへのアクセスを拒否
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # 不要なファイルへのアクセスを拒否
    location ~* \.(env|log|ini)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # エラーページ
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}