name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stripegym_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io docker-compose
    
    - name: Start Docker services
      run: |
        cd /home/runner/work/stripe-gym/stripe-gym
        docker-compose up -d db
        sleep 10  # Wait for database to be ready
    
    - name: Install Python dependencies
      run: |
        cd /home/runner/work/stripe-gym/stripe-gym/backend
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Wait for database
      run: |
        docker-compose exec -T db pg_isready -U stripegym
      timeout: 30s
    
    - name: Run database migrations
      run: |
        cd /home/runner/work/stripe-gym/stripe-gym/backend
        docker-compose exec -T app alembic upgrade head
      env:
        DATABASE_URL: postgresql://stripegym:password@localhost:5432/stripegym_test
    
    - name: Run basic tests
      run: |
        cd /home/runner/work/stripe-gym/stripe-gym/backend
        python -m pytest tests/test_hello.py tests/test_simple_api.py tests/test_basic_api.py --cov=app --cov-report=xml --cov-report=term-missing
      env:
        DATABASE_URL: postgresql://stripegym:password@localhost:5432/stripegym_test
        STRIPE_SECRET_KEY: sk_test_dummy
        STRIPE_WEBHOOK_SECRET: whsec_test_dummy
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        directory: ./backend
        fail_ci_if_failure: false
    
    - name: Test Results Summary
      if: always()
      run: |
        echo "## Test Summary" >> $GITCHUB_OUTPUT
        echo "- ✅ Basic tests completed"
        echo "- ✅ API endpoints tested" 
        echo "- ✅ Coverage report generated"
